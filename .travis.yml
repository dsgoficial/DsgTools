services:
    - docker
before_install:
    # Build this docker:
    # - cd qgis-testing-environment && docker build -t qgis-testing-environment .
    # or just pull it:
    - docker pull qgis/qgis:final-3_10_9
install:
    - docker run -d --name dsgtools-testing-env -v ${TRAVIS_BUILD_DIR}:/tests_directory -e DISPLAY=:99 qgis/qgis:final-3_10_9
    - sleep 10
    # Setup qgis and enable the plugin
    - docker exec -it dsgtools-testing-env sh -c "qgis_setup.sh DsgTools"
    # If needd additional steps (for example make or paver setup, place it here)
    # Link the plugin to the tests_directory
    # Fix the symlink created by qgis_setup.sh
    - docker exec  -it dsgtools-testing-env sh -c "rm -f  /root/.local/share/QGIS/QGIS3/profiles/default/python/plugins/DsgTools"
    - docker exec -it dsgtools-testing-env sh -c "ln -s /tests_directory/ /root/.local/share/QGIS/QGIS3/profiles/default/python/plugins/DsgTools"
    - docker exec -it dsgtools-testing-env sh -c "apt update && apt install -y libqt5sql5-psql libqt5sql5-sqlite"

script:
    - docker exec -it dsgtools-testing-env sh -c "cd /tests_directory && qgis_testrunner.sh tests.test_ValidationAlgorithms"
    - docker exec -it dsgtools-testing-env sh -c "cd /tests_directory && qgis_testrunner.sh tests.test_EnvironmentSetterAlgorithms"
    - docker exec -it dsgtools-testing-env sh -c "cd /tests_directory && qgis_testrunner.sh tests.test_CustomButtonSetup"
    - docker exec -it dsgtools-testing-env sh -c "cd /tests_directory && qgis_testrunner.sh tests.test_DsgToolsProcessingModel"
    - docker exec -it dsgtools-testing-env sh -c "cd /tests_directory && qgis_testrunner.sh tests.test_OtherAlgorithms"
